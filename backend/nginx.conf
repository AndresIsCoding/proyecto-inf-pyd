events {
    worker_connections 1024;
}

http {
    upstream coordinator {
        server ms_coordinator:8001;
    }
    
    upstream workers {
        server ms_worker_1:8002;
        server ms_worker_2:8003;
        server ms_worker_3:8004;
    }
    
    upstream stats {
        server ms_stats:8005;
    }

    # Configuraci√≥n para el coordinador
    server {
        listen 80;
        server_name coordinator.localhost;
        
        location / {
            proxy_pass http://coordinator;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
    }

    # Configuraci√≥n para workers (balanceo de carga)
    server {
        listen 80;
        server_name workers.localhost;
        
        location / {
            proxy_pass http://workers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Configuraci√≥n para estad√≠sticas
    server {
        listen 80;
        server_name stats.localhost;
        
        location / {
            proxy_pass http://stats;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Configuraci√≥n por defecto (dashboard)
    server {
        listen 80 default_server;
        server_name _;
        
        location / {
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Sistema Distribuido S&P 500</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .service { margin: 20px 0; padding: 15px; border-left: 4px solid #007acc; background: #f8f9fa; }
        .endpoint { font-family: monospace; background: #e9ecef; padding: 5px 10px; border-radius: 3px; margin: 5px 0; display: block; }
        h1 { color: #333; border-bottom: 2px solid #007acc; padding-bottom: 10px; }
        h2 { color: #555; margin-top: 30px; }
        .status { display: inline-block; padding: 3px 8px; border-radius: 3px; font-size: 12px; font-weight: bold; }
        .running { background: #d4edda; color: #155724; }
        .info { background: #d1ecf1; color: #0c5460; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ Sistema Distribuido S&P 500</h1>
        <p>Panel de control del sistema distribuido para descarga y an√°lisis de datos del S&P 500.</p>
        
        <h2>üìä Servicios Disponibles</h2>
        
        <div class="service">
            <h3>üéØ Coordinador <span class="status running">RUNNING</span></h3>
            <p>Gestiona la distribuci√≥n de tareas y coordinaci√≥n de workers.</p>
            <code class="endpoint">GET http://localhost:8001/status - Estado del sistema</code>
            <code class="endpoint">POST http://localhost:8001/download/start - Iniciar descarga distribuida</code>
            <code class="endpoint">GET http://localhost:8001/data - Obtener datos consolidados</code>
        </div>

        <div class="service">
            <h3>üë• Workers <span class="status running">3 NODES</span></h3>
            <p>Nodos de procesamiento distribuido para descarga de datos.</p>
            <code class="endpoint">GET http://localhost:8002/status - Worker 1</code>
            <code class="endpoint">GET http://localhost:8003/status - Worker 2</code>
            <code class="endpoint">GET http://localhost:8004/status - Worker 3</code>
        </div>

        <div class="service">
            <h3>üìà Estad√≠sticas <span class="status running">RUNNING</span></h3>
            <p>Servicio de an√°lisis estad√≠stico compatible con la versi√≥n original.</p>
            <code class="endpoint">GET http://localhost:8005/stats/basic - Estad√≠sticas b√°sicas</code>
            <code class="endpoint">GET http://localhost:8005/stats/summary - Resumen de datos</code>
            <code class="endpoint">GET http://localhost:8005/stats/reload - Recargar datos</code>
        </div>

        <div class="service">
            <h3>üóÑÔ∏è Cache <span class="status info">REDIS</span></h3>
            <p>Sistema de cache distribuido para optimizaci√≥n de rendimiento.</p>
            <code class="endpoint">redis://localhost:6379 - Conexi√≥n Redis</code>
        </div>

        <h2>üß™ Comandos de Prueba</h2>
        <div style="background: #f8f9fa; padding: 15px; border-radius: 5px; margin: 15px 0;">
            <p><strong>1. Verificar estado del sistema:</strong></p>
            <code class="endpoint">curl http://localhost:8001/status</code>
            
            <p><strong>2. Iniciar descarga distribuida:</strong></p>
            <code class="endpoint">curl -X POST http://localhost:8001/download/start -H "Content-Type: application/json" -d "{\"chunk_size\": 5, \"force_reload\": true}"</code>
            
            <p><strong>3. Obtener datos consolidados:</strong></p>
            <code class="endpoint">curl http://localhost:8001/data</code>
            
            <p><strong>4. Ver estad√≠sticas:</strong></p>
            <code class="endpoint">curl http://localhost:8005/stats/summary</code>
        </div>

        <h2>üìä Monitoreo</h2>
        <p>El sistema incluye health checks autom√°ticos y heartbeat monitoring para garantizar alta disponibilidad.</p>
    </div>
</body>
</html>';
            add_header Content-Type text/html;
        }
    }
}